from reportlab.lib.pagesizes import A4
from reportlab.lib import colors
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib.units import inch
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle
from datetime import datetime

def generate_pdf_report(results, output_path):
    doc = SimpleDocTemplate(output_path, pagesize=A4)
    elements = []

    styles = getSampleStyleSheet()
    title = f"Vulnerability Scan Report - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
    elements.append(Paragraph(title, styles['Title']))
    elements.append(Spacer(1, 0.5 * inch))

    for url, result in results.items():
        elements.append(Paragraph(f"Results for {url}", styles['Heading2']))
        elements.append(Spacer(1, 0.2 * inch))

        # Missing Headers
        if 'headers' in result:
            elements.append(Paragraph("Missing Security Headers", styles['Heading3']))
            missing_headers = result['headers'].get('missing_headers', [])
            if missing_headers:
                for header in missing_headers:
                    elements.append(Paragraph(header, styles['Normal']))
            else:
                elements.append(Paragraph("No missing headers found.", styles['Normal']))
            elements.append(Spacer(1, 0.2 * inch))

        # XSS
        if 'xss' in result:
            elements.append(Paragraph("Cross-Site Scripting (XSS) Results", styles['Heading3']))
            for entry in result['xss']:
                status = "Vulnerable" if entry['vulnerable'] else "Not Vulnerable"
                elements.append(Paragraph(f"{entry['url']} - {status}", styles['Normal']))
            elements.append(Spacer(1, 0.2 * inch))

        # SQL Injection
        if 'sql_injection' in result:
            elements.append(Paragraph("SQL Injection Results", styles['Heading3']))
            for entry in result['sql_injection']:
                status = "Vulnerable" if entry['vulnerable'] else "Not Vulnerable"
                elements.append(Paragraph(f"{entry['url']} - {status}", styles['Normal']))
            elements.append(Spacer(1, 0.2 * inch))

        elements.append(Spacer(1, 0.5 * inch))

    doc.build(elements)
